name: release
on:
  push:
    tags:
      - v*.*.*
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag to release"
        required: true

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [x64, arm64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - run: corepack enable
      - run: yarn
      - if: matrix.architecture == 'x64'
        run: yarn make --arch=x64 --verbose
      - if: matrix.architecture == 'arm64'
        run: yarn make --arch=arm64 --verbose
      - id: find_assets_rpm
        run: |
          ASSET_PATH=$(find ./out/make -path './node_modules' -prune -o -name '*.rpm' -print | head -n 1)
          ABSOLUTE_ASSET_PATH=$(realpath "$ASSET_PATH")
          echo "ASSET_RPM_PATH=$ABSOLUTE_ASSET_PATH" >> $GITHUB_ENV
          BASENAME=$(basename "$ASSET_PATH")
          echo "ASSET_RPM_BASENAME=$BASENAME" >> $GITHUB_ENV
        shell: bash
      - id: find_assets_deb
        run: |
          ASSET_PATH=$(find ./out/make -path './node_modules' -prune -o -name '*.deb' -print | head -n 1)
          ABSOLUTE_ASSET_PATH=$(realpath "$ASSET_PATH")
          echo "ASSET_DEB_PATH=$ABSOLUTE_ASSET_PATH" >> $GITHUB_ENV
          BASENAME=$(basename "$ASSET_PATH")
          echo "ASSET_DEB_BASENAME=$BASENAME" >> $GITHUB_ENV
        shell: bash
      - id: upload-artifact-rpm
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ASSET_RPM_BASENAME }}
          path: ${{ env.ASSET_RPM_PATH }}
          overwrite: true
      - id: upload-artifact-deb
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ASSET_DEB_BASENAME }}
          path: ${{ env.ASSET_DEB_PATH }}
          overwrite: true
      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag_name || github.ref_name }}
          name: ${{ github.event.inputs.tag_name || github.ref_name }}
          files: ${{ env.ASSET_RPM_PATH }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag_name || github.ref_name }}
          name: ${{ github.event.inputs.tag_name || github.ref_name }}
          files: ${{ env.ASSET_DEB_PATH }}
          token: ${{ secrets.GITHUB_TOKEN }}
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        architecture: [x64, arm64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - run: python --version
      - run: corepack enable
      - run: corepack prepare yarn
      - run: yarn
      - if: matrix.architecture == 'x64'
        run: yarn make --arch=x64 --verbose
      - if: matrix.architecture == 'arm64'
        run: yarn make --arch=arm64 --verbose
      - id: find_asset
        run: |
          ASSET_PATH=$(find ./out/make -path './node_modules' -prune -o -name '*.dmg' -print | head -n 1)
          ABSOLUTE_ASSET_PATH=$(realpath "$ASSET_PATH")
          echo "ASSET_PATH=$ABSOLUTE_ASSET_PATH" >> $GITHUB_ENV
          BASENAME=$(basename "$ASSET_PATH")
          echo "ASSET_BASENAME=$BASENAME" >> $GITHUB_ENV
        shell: bash
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ASSET_BASENAME }}
          path: ${{ env.ASSET_PATH }}
          overwrite: true
      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag_name || github.ref_name }}
          name: ${{ github.event.inputs.tag_name || github.ref_name }}
          files: ${{ env.ASSET_PATH }}
          token: ${{ secrets.GITHUB_TOKEN }}
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        architecture: [x64, arm64, i386]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - run: python --version
      - run: corepack enable
      - shell: pwsh
        run: |
          $retries = 1
          $count = 0
          do {
            yarn
            $exitCode = $?
            if ($exitCode -eq 0) {
              break
            }
            $count++
            Write-Output "Retrying ($count/$retries)..."
            Start-Sleep -Seconds 5
          } while ($count -lt $retries)
      - if: matrix.architecture == 'x64'
        run: yarn make --arch=x64 --verbose
      - if: matrix.architecture == 'arm64'
        run: yarn make --arch=arm64 --verbose
      - if: matrix.architecture == 'i386'
        run: yarn make --arch=ia32 --verbose
      - if: matrix.architecture == 'arm64'
        id: find_asset_arm64
        run: |
          $assetPath = (Get-ChildItem -Path out/make -Recurse -Filter *.exe | Select-Object -First 1).FullName
          $basename = [System.IO.Path]::GetFileNameWithoutExtension($assetPath)
          $extension = [System.IO.Path]::GetExtension($assetPath)
          $newBasename = ($basename -replace ' ', '-') + "-arm64" + $extension
          $newFilePath = (Join-Path -Path (Get-Item $assetPath).DirectoryName -ChildPath $newBasename)
          Rename-Item -Path $assetPath -NewName $newBasename
          $escapedFilePath = $newFilePath -replace '\\', '\\\\'
          echo "ASSET_BASENAME=$newBasename" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "ASSET_PATH=$escapedFilePath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        shell: pwsh
      - if: matrix.architecture == 'x64'
        id: find_asset_x64
        run: |
          $assetPath = (Get-ChildItem -Path out/make -Recurse -Filter *.exe | Select-Object -First 1).FullName
          $basename = [System.IO.Path]::GetFileNameWithoutExtension($assetPath)
          $extension = [System.IO.Path]::GetExtension($assetPath)
          $newBasename = ($basename -replace ' ', '-') + "-x64" + $extension
          $newFilePath = (Join-Path -Path (Get-Item $assetPath).DirectoryName -ChildPath $newBasename)
          Rename-Item -Path $assetPath -NewName $newBasename
          $escapedFilePath = $newFilePath -replace '\\', '\\\\'
          echo "ASSET_BASENAME=$newBasename" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "ASSET_PATH=$escapedFilePath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        shell: pwsh
      - if: matrix.architecture == 'i386'
        id: find_asset_x86
        run: |
          $assetPath = (Get-ChildItem -Path out/make -Recurse -Filter *.exe | Select-Object -First 1).FullName
          $basename = [System.IO.Path]::GetFileNameWithoutExtension($assetPath)
          $extension = [System.IO.Path]::GetExtension($assetPath)
          $newBasename = ($basename -replace ' ', '-') + "-x86" + $extension
          $newFilePath = (Join-Path -Path (Get-Item $assetPath).DirectoryName -ChildPath $newBasename)
          Rename-Item -Path $assetPath -NewName $newBasename
          $escapedFilePath = $newFilePath -replace '\\', '\\\\'
          echo "ASSET_BASENAME=$newBasename" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "ASSET_PATH=$escapedFilePath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        shell: pwsh
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ASSET_BASENAME }}
          path: ${{ env.ASSET_PATH }}
          overwrite: true
      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag_name || github.ref_name }}
          name: ${{ github.event.inputs.tag_name || github.ref_name }}
          files: ${{ env.ASSET_PATH }}
          token: ${{ secrets.GITHUB_TOKEN }}
